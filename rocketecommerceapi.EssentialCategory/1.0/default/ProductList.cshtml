@inherits RocketEcommerceAPI.Components.RocketEcommerceAPITokens<Simplisity.SimplisityRazor>
@using Simplisity;
@using RocketEcommerceAPI.Components;
@using DNNrocketAPI.Components;
@using RocketPortal.Components;

@AddProcessData("resourcepath", "/DesktopModules/DNNrocket/api/App_LocalResources/")
@AddProcessData("resourcepath", "/DesktopModules/DNNrocketModules/RocketECommerce/App_LocalResources/")

@{ var productDataList = (ProductLimpetList)Model.GetDataObject("productlist");
    var companyData = (CompanyLimpet)Model.GetDataObject("companydata"); ;
    var cartData = (CartLimpet)Model.GetDataObject("cartdata");
    var sessionParams = (SessionParams)Model.SessionParamsData;
    var portalShop = (PortalShopLimpet)Model.GetDataObject("portalshop");
    var portalData = (PortalLimpet)Model.GetDataObject("portaldata");
    var remoteModule = (RemoteModule)Model.GetDataObject("remotemodule");
    var appTheme = (AppThemeLimpet)Model.GetDataObject("apptheme");
    var appThemeDefault = (AppThemeLimpet)Model.GetDataObject("appthemedefault");
    var categoryDataList = (CategoryLimpetList)Model.GetDataObject("categorylist");
    var categoryData = new CategoryLimpet(portalShop.PortalId, productDataList.CategoryId, sessionParams.CultureCode);

    var hbsDict = new Dictionary<string, SimplisityInfo>();
    hbsDict.Add("sessionparams", sessionParams.Info);
    hbsDict.Add("remotemodule", new SimplisityInfo(remoteModule.Record));
    hbsDict.Add("resxlist", RenderRazorUtils.GetResxPaths(Processdata));
}

@AddProcessData("resourcepath", "/DesktopModules/RocketThemes/" + remoteModule.AppThemeViewFolder + "/" + remoteModule.AppThemeViewVersion + "/resx/")

<h1>
    @if (!categoryData.Exists)
    {
<span>@companyData.CompanyName</span> }
            else
            {
<span>@categoryData.Name</span>}
</h1>

<div class="w3-row">
    <div class="w3-threequarter">
        <div class="w3-row">
            @RenderTemplate("SearchBanner.cshtml", appThemeDefault, Model, true)
            @foreach (ProductLimpet productData in productDataList.GetArticleList())
            {
                hbsDict.Remove("data");
                hbsDict.Add("data", productData.Info);
                @RenderHandleBarsRE(hbsDict, appTheme, "productlistrow.hbs", remoteModule.ModuleRef, "")
            }
        </div>
        @RenderTemplate("ProductPaging.cshtml", appThemeDefault, Model, true)
    </div>
    <div class="w3-quarter">
        <!-- Cart (Include design to stop flicker on the page) -->
        <div id="minicartdisplay" class="productlistcart">

            <div class="minicartdisplay">
                <h3>@ResourceKey("RE.cart", sessionParams.CultureCode)</h3>
                <div class="w3-border-bottom w3-margin-bottom ">
                    <div>@ResourceKey("RE.items", sessionParams.CultureCode)&nbsp;:&nbsp;
                        <span id="a-cartqty">&nbsp;</span>    
                        <span class="w3-right"><strong><span id="a-carttotal">&nbsp;</span></strong></span>
                    </div>
                </div>
                <a id="cartdisplay" class="w3-button w3-light-grey simplisity_click " s-cmdurl="@(sessionParams.ApiUrl)" s-before="clearMiniCartJson" s-return="#ecommerce-tag" s-cmd="rocketecommerceapi_cartlist" s-fields='{"template":"cartlist.cshtml","moduleref":"@(remoteModule.ModuleRef)"}'>@MaterialIcon("shopping_cart")&nbsp;@(ResourceKey("RE.viewcart", sessionParams.CultureCode))</a>
            </div>

        </div>
        <div class="productlistcat">
            @if (categoryDataList.DataList.Count > 0)
            {
                @RenderTemplate("CategorySideMenu.cshtml", appTheme, Model)                
            }
        </div>
    </div>
</div>
